####################################################################
#  GitHub Action to perform a configurable, environment-targeted
#  rollback of database changes.
#####################################################################
name: 'Liquibase Pro Rollback Utility'
run-name: ${{ inputs.environment }} '${{ inputs.command }} ${{ inputs.command-arguments }}' by ${{ github.actor }}

on:

  workflow_dispatch:
    inputs:
      # The type 'environment' will automatically pull in the environments create in GitHub
      environment:
        description: 'Environment:'
        type: environment
        default: develop
        required: true
      # Which rollback command to use. See the following:
      #  https://docs.liquibase.com/commands/rollback/rollback-by-tag.html
      #  https://docs.liquibase.com/commands/rollback/rollback-count.html
      #  https://docs.liquibase.com/commands/rollback/rollback-one-changeset.html
      #  https://docs.liquibase.com/commands/rollback/rollback-one-update.html
      #  https://docs.liquibase.com/commands/rollback/rollback-to-date.html
      command:
        description: 'Rollback Command:'
        required: true
        default: 'status'
        type: choice
        options: ['rollback','rollback-count','rollback-one-changeset','rollback-one-update','rollback-to-date','rollback-count-sql']
      # Command parameters. See https://docs.liquibase.com/parameters/command-parameters.html
      command-arguments:
        description:  'Rollback Command arguments:'
        required: false
        type: string
      # Global parameters. See https://docs.liquibase.com/parameters/command-parameters.html
      global-arguments:
        description: 'Global Arguments:'
        required: false
        type: string
      # For more info on log level, see: https://docs.liquibase.com/parameters/log-level.html
      log-level:
        description: 'Liquibase log level'
        required: false
        default: 'INFO'
        type: choice
        options: ['SEVERE','WARNING','INFO','FINE','OFF']

####################################################################
#  Set up the environment
#####################################################################
env:
  #  The top level Flow File that orchestrates the database changes
  FLOW_FILE: "liquibase-postmerge.flowfile.yaml"

  #  Search path, as needed (See https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html)
  #  LIQUIBASE_SEARCH_PATH: src/main/resources/changelogs

  #  The database changelog. See https://docs.liquibase.com/concepts/changelogs/working-with-changelogs.html
  LIQUIBASE_COMMAND_CHANGELOG_FILE: "root_changelog.xml"

  #  Location of the Quality Checks settings file
  LIQUIBASE_COMMAND_CHECKS_SETTINGS_FILE: ${{ vars.LIQUIBASE_COMMAND_CHECKS_SETTINGS_FILE }}

  #  Pro License key
  #  See https://docs.liquibase.com/workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.html
  LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}

  #  JDBC URL of the database per environment
  #  See https://docs.liquibase.com/workflows/liquibase-community/using-jdbc-url-in-liquibase.html
  LIQUIBASE_COMMAND_URL: ${{ vars.LIQUIBASE_URL }}

  #  Credentials for the environment's database https://docs.liquibase.com/parameters/command-parameters.html
  LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_USERNAME }}
  LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_PASSWORD }}
  #
  #  Logging Settings
  LIQUIBASE_LOG_FORMAT: JSON
  LIQUIBASE_LOG_LEVEL: INFO


jobs:
  ####################################################################
  #  Initialization
  ####################################################################
  init:
    runs-on: [ self-hosted ]
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Set Environment
        id: set-environment
        run: |
          echo "environment=DEV" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.environment }}" == QA ]]; then
            echo "environment=QA" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ inputs.environment }}" == PROD ]]; then
            echo "environment=PROD" >> $GITHUB_OUTPUT
          fi

  ####################################################################
  #  Check out the source code
  ####################################################################
  checkout-repo:
    runs-on: [ self-hosted ]
    needs: init
    steps:
      # Check out the source code
      - name: Checkout repo
        uses: actions/checkout@v3

  #########################################################################
  #  Roll back using the changelog from the artifact
  #########################################################################
  liquibase-rollback-action:
    runs-on: [self-hosted]
    needs: [checkout-repo, init]

    environment: ${{ inputs.environment }}

    steps:
      # Clean the workspace to help clean up self-Hosted runners prior to deployment
      - uses: AutoModality/action-clean@v1

        # Check out the source code
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run liquibase command
        run: |
          liquibase ${{ inputs.global-arguments}} --log-level=${{ inputs.log-level}}  ${{ inputs.command }} ${{ inputs.command-arguments }}
