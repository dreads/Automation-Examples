####################################################################
#  GitHub Action to perform a configurable, environment-targeted
#  rollback of database changes.
#####################################################################
name: 'Liquibase Pro Rollback Utility'
run-name: ${{ inputs.environment }} '${{ inputs.command }} ${{ inputs.command-arguments }}' by ${{ github.actor }}

on:

  workflow_dispatch:
    inputs:
      # The type 'environment' will automatically pull in the environments create in GitHub
      environment:
        description: 'Environment:'
        type: environment
        default: develop
        required: true
      # For more info on log level, see: https://docs.liquibase.com/parameters/log-level.html
      log-level:
        description: 'Liquibase log level'
        required: false
        default: 'INFO'
        type: choice
        options: ['SEVERE','WARNING','INFO','FINE','OFF']

####################################################################
#  Set up the environment
#####################################################################
env:
  #  The top level Flow File that orchestrates the database changes
  #  We are using a flow which calls rollback-one-update-sql, and
  #  rollback-one-update: https://docs.liquibase.com/commands/rollback/rollback-one-update.html
  FLOW_FILE: "liquibase-process/flowfiles/liquibase-rollback.flowfile.yaml"

  #  Search path (See https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html)
  LIQUIBASE_SEARCH_PATH: ".,liquibase-process"

  #  Pro License key
  #  See https://docs.liquibase.com/workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.html
  LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}

  #  JDBC URL of the database per environment
  #  See https://docs.liquibase.com/workflows/liquibase-community/using-jdbc-url-in-liquibase.html
  LIQUIBASE_COMMAND_URL: ${{ secrets.LIQUIBASE_COMMAND_URL }}

  #  Credentials for the environment's database https://docs.liquibase.com/parameters/command-parameters.html
  LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_COMMAND_USERNAME }}
  LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_COMMAND_PASSWORD }}
  #
  #  Logging Settings
  LIQUIBASE_LOG_FORMAT: JSON
  LIQUIBASE_LOG_LEVEL: INFO


jobs:
  ####################################################################
  #  Initialization
  ####################################################################
  init:
    runs-on: [ self-hosted ]
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Set Environment
        id: set-environment
        run: |
          echo "environment=DEV" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.environment }}" == QA ]]; then
            echo "environment=QA" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ inputs.environment }}" == PROD ]]; then
            echo "environment=PROD" >> $GITHUB_OUTPUT
          fi

  ###################################################################
  #  Check out the source code
  ####################################################################
  checkout-repo:
    needs: [init]
    # Our database runs on Liquibase internal network, so we use a self-hosted runner
    # https://docs.github.com/en/actions/using-github-hosted-runners/connecting-to-a-private-network
    runs-on: [self-hosted]

    steps:
      # Check out the source code
      - name: Checkout Database Source repo
        uses: actions/checkout@v3

      # Check out the Liquibase Configuration Repo
      - name: Checkout Liquibase Configuration repo
        uses: actions/checkout@v4
        with:
          repository: adeelmalik78/Automations
          path: liquibase-process

  #########################################################################
  #  Roll back using the changelog from the artifact
  #########################################################################
  liquibase-rollback-action:
    runs-on: [self-hosted]
    needs: [checkout-repo, init]

    environment: ${{ inputs.environment }}

    steps:
      # Validate parseability of the Flow file
      - name: Validate flow
        run: |
          liquibase --license-key=${{ secrets.LIQUIBASE_LICENSE_KEY }} flow validate \
             --flow-file=${{ env.FLOW_FILE }} \
             --logfile=logs/liquibase.log

      # Execute the Flow file
      - name: Run flow
        run: |
          liquibase --license-key=${{ secrets.LIQUIBASE_LICENSE_KEY }} flow \
             --flow-file=${{ env.FLOW_FILE }} \
             --logfile=logs/liquibase.log
