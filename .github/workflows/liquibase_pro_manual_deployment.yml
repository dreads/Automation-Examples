#####################################################################
#  GitHub Action to perform continuous integration (CI) of database
#  changes using Liquibase Pro, Liquibase Pro Flows, Custom Quality
#  checks and S3.
#####################################################################
name: 'Liquibase Pro Targeted Deployment'
run-name: Liquibase Pro Targeted Deployment of ${{ inputs.artifact-version }} to ${{ inputs.environment }} by ${{ github.actor }}

on:
  workflow_dispatch:
    # Following are the inputs received via the GitHubActions Run workflow dialog
    inputs:
      # The type 'environment' will automatically pull in the environments created in GitHub
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
      # This is a text input for the version of the artifact to pull from Artifactory
      # and use for the deployment. The form is MMMMMMMMM.mm
      artifact-version:
        description: 'Version to deploy:'
        required: true
        type: string
      # For more info on log level, see: https://docs.liquibase.com/parameters/log-level.html
      log-level:
        description: 'Liquibase log level'
        required: false
        default: 'INFO'
        type: choice
        options: [ 'SEVERE','WARNING','INFO','FINE','OFF' ]

####################################################################
#  Set up the environment
#####################################################################
env:
  #  The top level Flow File that orchestrates the database changes
  FLOW_FILE: "liquibase-postmerge.flowfile.yaml"

  #  Search path, as needed (See https://docs.liquibase.com/concepts/changelogs/how-liquibase-finds-files.html)
  #  LIQUIBASE_SEARCH_PATH: src/main/resources/changelogs

  #  The database changelog. See https://docs.liquibase.com/concepts/changelogs/working-with-changelogs.html
  LIQUIBASE_COMMAND_CHANGELOG_FILE: "root_changelog.xml"

  #  Location of the Quality Checks settings file
  LIQUIBASE_COMMAND_CHECKS_SETTINGS_FILE: ${{ vars.LIQUIBASE_COMMAND_CHECKS_SETTINGS_FILE }}

  #  Pro License key
  #  See https://docs.liquibase.com/workflows/liquibase-pro/how-to-apply-your-liquibase-pro-license-key.html
  LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}

  #  JDBC URL of the database per environment
  #  See https://docs.liquibase.com/workflows/liquibase-community/using-jdbc-url-in-liquibase.html
  LIQUIBASE_COMMAND_URL: ${{ vars.LIQUIBASE_URL }}

  #  Credentials for the environment's database https://docs.liquibase.com/parameters/command-parameters.html
  LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_USERNAME }}
  LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_PASSWORD }}
  #
  #  Logging Settings
  LIQUIBASE_LOG_FORMAT: JSON
  LIQUIBASE_LOG_LEVEL: INFO

  # AWS S3 bucket is the host part of the S3 bucket
  AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET }}
  # AWS Access credentials use by the Liquibase Pro S3 Extension
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

  # Default AWS region
  AWS_REGION: us-east-1

jobs:
  ####################################################################
  #  Initialization
  ####################################################################
  init:
#    if: inputs.environment != 'DEV'
    runs-on: [self-hosted]
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Set Environment
        id: set-environment
        run: |
          echo "environment=DEV" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.environment }}" == QA ]]; then
            echo "environment=QA" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ inputs.environment }}" == PROD ]]; then
            echo "environment=PROD" >> $GITHUB_OUTPUT
          fi

  ####################################################################
  #  Extract the artifact
  #####################################################################
  extract-artifact:
    if: ${{ inputs.environment}} == 'QA' || $${{ inputs.environment}} == 'PROD'
    runs-on: [self-hosted]
    needs: init
    steps:

      - name: Download artifact
        run: |
          aws s3 cp s3://$AWS_S3_BUCKET/SNAPSHOT-artifact-${{inputs.artifact-version}}.zip .

      # Unzip the artifact into the newly created ./artifact directory
      - name: Unzip artifact
        run: |
          unzip -o ./SNAPSHOT-artifact-${{inputs.artifact-version}}.zip


  ####################################################################
  #  Perform Liquibase Pro database change control operations
  #####################################################################
  liquibase-deployment:
    needs: [init, extract-artifact]
    runs-on: [self-hosted]

    environment: ${{needs.init.outputs.environment}}

    steps:
      # Validate parseability of the Flow file
      - name: Validate flow
        run: |
          liquibase --license-key=${{ env.LIQUIBASE_PRO_LICENSE_KEY }} flow validate \
             --flow-file=${{ env.FLOW_FILE }} \
             --logfile=logs/liquibase.log
      #
      # Execute the Flow file
      - name: Run flow
        run: |
          liquibase --license-key=${{ env.LIQUIBASE_LICENSE_KEY }} flow \
             --flow-file=${{ env.FLOW_FILE }} \
             --logfile=logs/liquibase.log
